from sklearn.model_selection import GridSearchCV
from lightgbm import LGBMClassifier

# Define the parameter grid
param_grid = {
    'boosting_type': ['gbdt', 'dart'],
    'learning_rate': [0.0003, 0.001, 0.01, 0.1],
    'num_leaves': [20, 31, 40, 50],
    'max_depth': [3, 5, 7, 9],
    'scale_pos_weight': [1, 5, 10, 20],
    'n_estimators': [100, 500, 1000]
}

# Define the LightGBM model
lgbm = LGBMClassifier(objective='binary', metric='binary_logloss', random_state=42)

# Perform Grid Search CV
grid_search = GridSearchCV(
    estimator=lgbm, 
    param_grid=param_grid, 
    scoring='roc_auc', 
    cv=3, 
    verbose=2, 
    n_jobs=-1
)

# Fit the model
grid_search.fit(X_train, y_train)

# Print the best parameters and best AUC score
print("Best Parameters:", grid_search.best_params_)
print("Best ROC-AUC Score:", grid_search.best_score_)