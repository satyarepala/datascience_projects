# -*- coding: utf-8 -*-
"""data_points visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nKVzqSNnU8rgx2TMt47ojsx6Pa2NNU6y
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE

# Example lists with sublists (datapoints)
list1 = np.random.rand(500, 200)  # 500 sublists, each of length 200
list2 = np.random.rand(2500, 200)  # 2500 sublists, each of length 200
print(list1.shape), print(list2.shape)
# Combine the lists
data = np.concatenate((list1, list2), axis=0)

# Apply PCA to reduce to 2 dimensions
pca = PCA(n_components=2)
data_reduced_pca = pca.fit_transform(data)

# Apply t-SNE to reduce to 2 dimensions
tsne = TSNE(n_components=2, random_state=42)
data_reduced_tsne = tsne.fit_transform(data)

# Create color labels for visualization
colors = ['red'] * len(list1) + ['blue'] * len(list2)

# Plot PCA result
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
plt.scatter(data_reduced_pca[:, 0], data_reduced_pca[:, 1], c=colors, alpha=0.6)
plt.title('PCA')

# Plot t-SNE result
plt.subplot(1, 2, 2)
plt.scatter(data_reduced_tsne[:, 0], data_reduced_tsne[:, 1], c=colors, alpha=0.6)
plt.title('t-SNE')

plt.show()



from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Example data
list1 = np.random.rand(500, 200)  # 500 sublists, each of length 200
list2 = np.random.rand(2500, 200)  # 2500 sublists, each of length 200
data = np.concatenate((list1, list2), axis=0)
colors = ['red'] * len(list1) + ['blue'] * len(list2)

# Apply PCA to reduce to 3 dimensions
pca = PCA(n_components=3)
data_reduced_pca = pca.fit_transform(data)

# Plot in 3D
fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(data_reduced_pca[:, 0], data_reduced_pca[:, 1], data_reduced_pca[:, 2], c=colors, alpha=0.6)
ax.set_title('PCA 3D Visualization')
plt.show()


